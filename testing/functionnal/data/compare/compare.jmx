<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="2.9 r1437961">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="mod_compare" enabled="true">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <stringProp name="TestPlan.comments">Functional test for mod_compare</stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Test environment config" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="compare_port" elementType="Argument">
            <stringProp name="Argument.name">compare_port</stringProp>
            <stringProp name="Argument.value">8042</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Common variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="jmxresultdir" elementType="Argument">
            <stringProp name="Argument.name">jmxresultdir</stringProp>
            <stringProp name="Argument.value">/jmeter/results</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Web Services paths" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="comp" elementType="Argument">
            <stringProp name="Argument.name">comp</stringProp>
            <stringProp name="Argument.value">dup_test/compare</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="trunc" elementType="Argument">
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">dup_test/comp_truncate</stringProp>
            <stringProp name="Argument.name">trunc</stringProp>
          </elementProp>
          <elementProp name="test1" elementType="Argument">
            <stringProp name="Argument.name">test1</stringProp>
            <stringProp name="Argument.value">dup_test/comp_test1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="getlog" elementType="Argument">
            <stringProp name="Argument.name">getlog</stringProp>
            <stringProp name="Argument.value">dup_test/compare-diff.log</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="test2" elementType="Argument">
            <stringProp name="Argument.name">test2</stringProp>
            <stringProp name="Argument.value">dup_test/comp_test2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="largedata" elementType="Argument">
            <stringProp name="Argument.name">largedata</stringProp>
            <stringProp name="Argument.value">dup_test/largeresponse</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="delayed_response" elementType="Argument">
            <stringProp name="Argument.name">delayed_response</stringProp>
            <stringProp name="Argument.value">/delayed_response</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="method_headers" elementType="Argument">
            <stringProp name="Argument.name">method_headers</stringProp>
            <stringProp name="Argument.value">/dup_test_mocked/inquire?method,headers</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>true</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <url>true</url>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test Compare" enabled="true">
        <longProp name="ThreadGroup.start_time">1189436649000</longProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(test.loops,1)}</stringProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1189436649000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(test.rampup,10)}</stringProp>
        <stringProp name="TestPlan.comments">

</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Paramètres HTTP par défaut" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">${compare_port}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ALL cases" enabled="true">
          <stringProp name="TestPlan.comments">All cases have status OK</stringProp>
        </GenericController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Status Error" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Duplication-Type</stringProp>
                  <stringProp name="Header.value">Response</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">&quot;Duplication-Type: Response&quot; in the header</stringProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC2: invalid body format " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">empty body</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 400" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC3: GET no body =&gt; invalid body format " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">empty body</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 400" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC4: invalid body format " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000004Paris00000044Montpellier: OK&#xd;
Toto: fort&#xd;
Titi: petit&#xd;
00000006Napoli</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">invalid size for the request body</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 400" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC5: invalid body format " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris00000045Montpellier: OK&#xd;
Toto: fort&#xd;
Titi: petit&#xd;
00000006Napoli</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">invalid size for the response Header body</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 400" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC6: invalid size value" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0000abc5Paris00000044Montpellier: OK&#xd;
Toto: fort&#xd;
Titi: petit&#xd;
00000007Napoli</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">invalid lexical cast for the size of the request body</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 400" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC6: invalid size value" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris0000004cMontpellier: OK&#xd;
Toto: fort&#xd;
Titi: petit&#xd;
00000007Napoli</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">invalid lexical cast for the size of the response header</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 400" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC6: invalid size value" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris00000044Montpellier: OK&#xd;
Toto: fort&#xd;
Titi: petit&#xd;
0000000zNapoli</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">invalid lexical cast for the size of the response body</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 400" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Status OK" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC1: OK - No comparison made" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">missing &quot;Duplication-Type: Response&quot; in the header. The module sends the default value</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check Default Value" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1668466885">COMPARE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC1: OK - LargeData No comparison made" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${largedata}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">missing &quot;Duplication-Type: Response&quot; in the header. The module sends the default value</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check Default Value" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1650756404">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam hendrerit venenatis tellus, adipiscing tristique velit lacinia vel. Nullam lacus neque, tristique quis nunc vitae, sagittis sodales felis. Vivamus condimentum eros at elit lobortis tincidunt. Mauris nec ullamcorper tellus. Proin vehicula sollicitudin accumsan. Aenean aliquam tristique magna sed ultricies. Donec et sapien nibh. Nulla at magna ut risus convallis malesuada a at velit. Curabitur ut enim neque. Sed tincidunt orci non metus dictum volutpat. Phasellus a auctor diam.  Vivamus tristique blandit velit, non convallis lectus varius pulvinar. Sed auctor leo laoreet, lobortis tellus ac, luctus odio. Integer bibendum orci elit, vitae sollicitudin lectus ultrices non. Suspendisse volutpat, leo sit amet congue imperdiet, turpis massa cursus quam, eget viverra ligula sapien id elit. Vestibulum eu lacinia mi. Aliquam erat volutpat. In eget felis non dolor fringilla dapibus. Maecenas non enim vestibulum ligula gravida rutrum. Mauris condimentum tellus velit, vitae mattis est tempor venenatis. Phasellus ornare lectus laoreet nisl vestibulum venenatis. Morbi sodales, orci quis luctus accumsan, risus erat hendrerit sapien, vitae aliquet justo elit at libero. Donec imperdiet, ante vel pulvinar commodo, arcu tellus feugiat arcu, et tristique justo nibh a lacus.  Vivamus quis congue est. Sed tempor facilisis odio non tempor. Pellentesque convallis orci a sagittis vehicula. Morbi viverra, odio id semper ultrices, enim urna sodales nisi, consectetur vestibulum odio erat at ipsum. Phasellus sit amet dolor quis nisl ultrices iaculis vitae a tellus. Vivamus suscipit commodo aliquet. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed lobortis, diam eget tincidunt tincidunt, turpis nisl vulputate felis, ac luctus ante sapien non est. Maecenas tempor, nisi at placerat sagittis, leo neque blandit mi, quis sodales nunc elit sodales leo.  Proin facilisis elit in turpis fringilla, sit amet tempor dui laoreet. Aenean tempor, eros at ultricies feugiat, diam orci placerat neque, ut ornare lorem erat eu enim. Praesent iaculis nunc vel semper dignissim. Suspendisse ullamcorper neque dui, ac rutrum risus faucibus at. Aliquam at quam vulputate, dictum dolor in, feugiat turpis. Nam placerat, dui at accumsan laoreet, diam odio suscipit libero, a vulputate nunc orci ut mi. Nullam dictum est quam, at sodales est sagittis at. Etiam faucibus ante eu tortor aliquam tincidunt. Aliquam in erat at nunc laoreet molestie id vel justo. Suspendisse ultricies ipsum sapien, in scelerisque libero vehicula vel. Lorem ipsum dolor sit amet, consectetur adipiscing elit.  Etiam bibendum, dui tristique rhoncus ultricies, quam nisi eleifend lorem, vel tristique enim dui ac erat. Cras nec augue accumsan, congue enim vel, cursus ligula. Morbi rutrum magna arcu, ut aliquet lectus ultrices non. Sed ante dui, viverra non rutrum in, fermentum a sem. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sed sollicitudin est. Pellentesque in bibendum ipsum, eget faucibus lectus. Sed vehicula ipsum at porttitor aliquam. Aenean dictum, lacus in pellentesque elementum, velit diam malesuada lorem, ut porta ante nulla quis magna. Donec malesuada sollicitudin mattis. Maecenas pulvinar neque massa, id bibendum lectus ullamcorper eget. Vivamus vitae venenatis mauris. Pellentesque blandit dolor ac diam tempor, at pretium felis lacinia. Nullam ullamcorper elit feugiat, egestas lacus et, pellentesque mauris.  Sed iaculis leo a nisi aliquam eleifend. Ut in lorem luctus, aliquam elit eu, vulputate orci. Donec egestas ipsum molestie dui hendrerit dictum. Praesent sed vulputate nulla. Maecenas molestie suscipit arcu, non commodo dolor convallis non. Donec non diam congue, pretium felis a, lobortis lectus. Aenean vel diam et risus feugiat lobortis in ac nibh. Morbi faucibus, neque et condimentum posuere, quam libero pellentesque ligula, nec aliquet dui eros id tortor. Nullam eget venenatis felis. Maecenas lacinia, ligula vitae bibendum facilisis, enim ipsum rutrum turpis, eu facilisis augue dui placerat erat. Quisque at nunc ut mauris cursus fermentum.  Etiam turpis felis, elementum sit amet fermentum in, auctor at ligula. Proin pulvinar est et cursus imperdiet. Nunc lacus ante, luctus sed egestas varius, sagittis sit amet est. Curabitur hendrerit ornare iaculis. Proin in faucibus quam. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse fringilla non arcu vitae blandit. Duis id leo et mauris vestibulum sagittis. Integer facilisis porttitor sapien, eget pellentesque dui. Fusce aliquet sapien elit, eu accumsan felis vulputate sit amet. Cras in porta nisl. Integer eu orci vel massa convallis ornare. Etiam id tellus lorem. Fusce in nibh erat.  Curabitur justo mi, ultricies a adipiscing quis, aliquet a mauris. Quisque suscipit erat ligula, ac varius felis rhoncus at. Nam at libero tellus. Aliquam imperdiet justo est, eget fringilla nibh posuere ut. Maecenas eleifend nulla luctus, lacinia odio sed, consectetur erat. Vestibulum scelerisque ut ipsum eget ornare. Aliquam erat volutpat. Sed lobortis nisl non posuere sodales. Curabitur pretium massa nec ligula rhoncus, vel condimentum mauris tristique. Vestibulum semper sodales ac augue eu, tincidunt congue justo. Phasellus purus tortor, fringilla ac lectus venenatis, egestas lobortis ipsum. Fusce quis lacinia lorem.  Aenean luctus elementum nisl, vel vulputate erat congue quis. In in felis fermentum, tristique ante in, tincidunt odio. Aenean posuere lectus et ultricies sollicitudin. Sed semper adipiscing orci, sit amet egestas lectus hendrerit et. Maecenas sit amet porta dolor. Ut lacinia rhoncus turpis, at volutpat risus accumsan in. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Suspendisse sodales leo et est lobortis, id commodo nunc imperdiet.  Fusce rhoncus posuere velit, et ultrices neque suscipit vel. Pellentesque blandit augue quis dui laoreet hendrerit. Maecenas dignissim leo pharetra rutrum eleifend. Proin nec ligula vehicula, placerat turpis at, facilisis lectus. Morbi et viverra eros. Maecenas et viverra quam, eu laoreet mi. Vivamus facilisis ante orci, ac convallis arcu egestas eu. Etiam quis ipsum ac mauris placerat pretium.  Cras elit nisl, commodo sit amet nisi quis, rhoncus pellentesque metus. Mauris quis sapien feugiat, sodales lorem vitae, ornare diam. Ut gravida nulla ut quam commodo euismod. Praesent vivecondimentum. Praesent ac adipiscing risus. Nunc viverra, risus sit amet bibendum fermentum, ante ipsum egestas ligula, et egestas augue dolor nec ipsum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae;  Suspendisse justo felis, congue ac tellus ac, tristique vehicula lorem. Nam at vulputate diam, vel vestibulum risus. Proin nec consequat eros. Aenean eget nunc at augue hendrerit feugiat a ut ipsum. Aliquam in mi placerat odio ultricies sodales ac eu sem. Etiam nec leo eget eros faucibus dapibus. Pellentesque iaculis luctus tellus, a posuere urna volutpat ut. Vestibulum facilisis metus lorem, eu fermentum mi facilisis vitae. Nulla scelerisque tempor justo, sed egestas sem ornare id. Quisque tincidunt pharetra enim in ultricies. Donec dignissim dapibus nisi, non molestie nibh rhoncus eu. Maecenas eget sodataciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Proin pretium tellus ac sagittis molestie. Donec pulvinar sit amet turpis eget interdum. Etiam consequat elementum odio, rhoncus tincidunt lacus auctor quis.  Curabitur interdum tortor vehicula eros molestie malesuada. Suspendisse blandit purus mi, id vehicula nunc ornare et. Phasellus est sem, fringilla eu laoreet malesuada, facilisis eget lorem. Phasellus sed mattis metus. Nullam laoreet sit amet elit a ultricies. In hac habitasse platea dictumst. Mauris leo nibh, luctus in felis at, accumsan venenatis urna. Quisque lorem purus, ultrices quis adipiscing ac, laoreet non purus. Curabitur eget fringilla libero. Vestibulum ac volutpat magna. Maecenas dignissim facilisis risus eu lacinia. Vivamus vel lacus vel tellus rutrum ullamcorper. Curabitur quis sapien imperdiet enim eleifend condimentum. Quisque laoreet elit massa, eu fermentum sem pulvinar sit amet. Etiam hendrerit facilisis bibendum.  Donec elementum accumsan magna quis dignissim. Phasellus in dignissim quam. Nam consectetur at justo ac semper. Mauris velit orci, gravida vel massa ut, condimentum aliquam massa. Duis ut leo quis sem eleifend adipiscing. Donec tempor mollis leo, a cursus urna tempor non. Sed pretium urna vel elit rutrum imperdiet. Phasellus vitae mauris massa. Proin eget fermentum orci. Phasellus faucibus dictum elit sePraesent aliquet malesuada nunc id tincidunt. Nulla convallis non massa et pharetra. Quisque ut arcu rutrum, blandit tortor a, imperdiet risus. Nulla facilisi. Pellentesque tincidunt scelerisque felis in venenatis. Aliquam tortor libero, sodales eget eleifend non, interdum id mi. Pellentesque porta id libero sit amet accumsan. Suspendisse id magna mollis, eleifend massa id, blandit augue. Phasellus risus magna, facilisis in porta pretium, suscipit in mi. Fusce eget sapien ac mauris commodo rutrum sit amet sit amet dui. Pellentesque in pulvinar ante. Donec volutpat nec lectus eu tincidunt.  Vivamus lobortis eget augue sed dapibus. Etiam ut urna quis arcu auctor euismod. Sed eleifsodales sed. Suspendisse ut dapibus lectus, non tempus magna.  Proin posuere velit ante, at aliquet sem porta eu. Nulla gravida mi felis, et dignissim ante vulputate in. Donec vitae odio vitae orci consectetur condimentum eget in mauris. Quisque facilisis quis dolor ac aliquet. Aenean fermentum orci ut leo sollicitudin dapibus. Sed accumsan nisi augue, eget tempus ligula faucibus nec. Nulla facilisi. Ut et varius risus.  Nullam mollis cursus urna, id lacinia tortor lacinia et. Curabitur ac consectetur felis. Sed non dolor leo. Nam turpis enim, tincidunt sed tortor eget, porta vestibulum purus. Duis rutrum ligula at euismod luctus. Vivamus sed commodo magna. Quisque et tempus dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In nec libero pharetra, lobortis mi ac, convallis ligula.  Nunc imperdiet leo urna, sed pharetra dui rutrum sit amet. Quisque dapibus accumsan dolor vitae dapibus. Nullam malesuada est mi, eget venenatis mi euismod a. Ut euismod tincidunt mauris, et fringilla odio bibendum non. Morbi bibendum felis sed dignissim pharetra. Suspendisse potenti. Fusce porttitor convallis lorem porttitor pretium. Nulla vestibulum tempor urna et blandit. Vestibulum faucibus id metus nec auctor. Curabitur eu rutrum risus, eget lobortis nunc. Donec blandit eu dolor nec ornare. Ut ipsum erat, dapibus i. Fusce elementum libero augue, sit amet consectetur velit vulputate quis. Maecenas accumsan ultrices lacus, at adipiscing ligula laoreet at. Aliquam mi leo, eleifend pharetra pretium et, tempor nec sem.  Nulla accumsan ultricies eros nec blandit. Suspendisse gravida odio id sem accumsan suscipit. Nullam quis lacus ac neque hendrerit auctor consectetur non ligula. Proin porttitor eros ac orci luctus vehicula. Ut mi ipsum, fermentum sit amet lorem a, rhoncus vestibulum lectus. In neque risus, tristique interdum libero id, viverra porttitor nunc. In tristique congue urna, in vulputate enim. Nullam imperdiet eget enim ac tempor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Quisque in aliquet tortor.  Ut eu orci rhoncus, cursus ipsum sit amet, volutpat libero. Aliquam in urna nisl. Aenean ac dolor ac felis adipiscing rhoncus ac quis urna. Mauris eget pulvinar mauris. Cras interdum rhoncus nunc, sed vehicula lacus porta ac. Curabitur vestibulum semper nunc quis bibendum. Morbi lobortis lectus vel dui tincidunt facilisis. Sed ultricies elementum egestas.  Curabitur imperdiet augue risus, ac commodo lacus ullamcorper aliquet. Etiam sed nulla felis. In nibh dui, laoreet et ligula sit amet, commodo laoreet orci. Vivamus molestie ante odio, in congue nisl adipiscing id. Nunc sit amet suscipit felis. Integer aliquet tortor at risus tempor, auctor aliquet sapien mollis posuere.   Proin posuere velit ante, at aliquet sem porta eu. Nulla gravida mi felis, et dignissim ante vulputate in. Donec vitae odio vitae orci consectetur condimentum eget in mauris. Quisque facilisis quis dolor ac aliquet. Aenean fermentum orci ut leo sollicitudin dapibus. Sed accumsan nisi augue, eget tempus ligula faucibus nec. Nulla facilisi. Ut et varius risus.  Nullam mollis cursus urna, id lacinia tortor lacinia et. Curabitur ac consectetur felis. Sed non dolor leo. Nam turpis enim, tincidunt sed tortor eget, porta vestibulum purus. Duis rutrum ligula at euismod luctus. Vivamus sed commodo magna. Quisque et tempus dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In nec libero pharetra, lobortis mi ac, convallis ligula.  Nunc imperdiet leo urna, sed pharetra dui rutrum sit amet. Quisque dapibus accumsan dolor vitae dapibus. Nullam malesuada est mi, eget venenatis mi euismod a. Ut euismod tincidunt mauris, et fringilla odio bibendum non. Morbi bibendum felis sed dignissim pharetra. Suspendisse potenti. Fusce porttitor convallis lorem porttitor pretium. Nulla vestibulum tempor urna et blandit. Vestibulum faucibus id metus nec auctor. Curabitur eu rutrum risus, eget lobortis nunc. Donec blandit eu dolor nec ornare. Ut ipsum erat, dapibus in gravida eu, bibendum non neque. Nulla tincidunt turpis vitae ante semper, eget consequat felis vulputate. Ut viverra, elit at lacinia auctor, risus elit lobortis lorem, sit amet vulputate risus lectus at lectus. In hac habitasse platea dictumst. Donec varius molestie massa, vel commodo lorem posuere sollicitudin.  Nam auctor tincidunt condimentum. Duis semper, sapien eget condimentum fermentum, ipsum orci varius turpis, a bibendum turpis tortor at libero. Praesent pretium metus at neque adipiscing fermentum. Nullam luctus tincidunt neque id laoreet. Sed vel dui nec nibh tempor vulputate at eget nisi. Curabitur at augue a dolor facilisis molestie. Suspendisse iaculis augue non orci egestas consequat. Aenean vulputate vestibulum augue eget laoreet. Duis id tincidunt ipsum. Ut felis neque, dignissim nec pharetra eu, lacinia ac lectus. Sed interdum, lacus in ultrices convallis, neque justo posuere augue, sed gravida est neque at erat. Sed in tortor pellentesque, suscipit augue a, semper nisl. Mauris id vulputate diam. Pellentesque pellentesque iaculis venenatis. Mauris et augue et lacus lobortis bibendum. Etiam ornare mi faucibus, mollis arcu et, sollicitudin enim.  Proin convallis diam non lacinia condimentum. Maecenas mattis feugiat augue, non sodales felis euismod a. Fusce eget ante mauris. Nam quam diam, pellentesque nec ultrices sit amet, faucibus eget leo. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque tristique ipsum non tortor blandit mollis. Duis sodales erat ut enim cursus pulvinar. Nunc nunc sapien, vehicula sagittis semper id, tempor eu mi. Cras sed ultricies odio, vel rutrum libero. Fusce sollicitudin elit ac leo venenatis vehicula.  Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed blandit commodo enim vitae congue. Pellentesque a sapien vitae odio laoreet consequat sed eu leo. Sed malesuada diam eget mi blandit pulvinar. Aenean lacinia varius leo facilisis elementum. Suspendisse at feugiat velit. Maecenas eu vestibulum diam. Pellentesque id tortor viverra, scelerisque elit a, dignissim magna. Donec at felis et nisi consectetur accumsan. Vivamus convallis et lacus eget sollicitudin. Aliquam consequat, lectus nec fermentum bibendum, leo mi viverra nunc, vitae varius nulla augue nec sapien. Sed placerat, nisl eget lobortis interdum, sem lectus fringilla erat, at tincidunt ipsum nulla vitae nulla. Vivamus placerat, enim ac iaculis dapibus, dolor nisl lobortis felis, vitae malesuada tellus eros ac orci.  Aliquam non velit sed nunc condimentum cursus eu a neque. Vivamus venenatis, lacus et sodales sagittis, leo leo eleifend mauris, at gravida mi justo quis leo. Ut vel erat ligula. In vitae pulvinar lectus. Fusce elementum libero augue, sit amet consectetur velit vulputate quis. Maecenas accumsan ultrices lacus, at adipiscing ligula laoreet at. Aliquam mi leo, eleifend pharetra pretium et, tempor nec sem.  Nulla accumsan ultricies eros nec blandit. Suspendisse gravida odio id sem accumsan suscipit. Nullam quis lacus ac neque hendrerit auctor consectetur non ligula. Proin porttitor eros ac orci luctus vehicula. Ut mi ipsum, fermentum sit amet lorem a, rhoncus vestibulum lectus. In neque risus, tristique interdum libero id, viverra porttitor nunc. In tristique congue urna, in vulputate enim. Nullam imperdiet eget enim ac tempor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Quisque in aliquet tortor.  Ut eu orci rhoncus, cursus ipsum sit amet, volutpat libero. Aliquam in urna nisl. Aenean ac dolor ac felis adipiscing rhoncus ac quis urna. Mauris eget pulvinar mauris. Cras interdum rhoncus nunc, sed vehicula lacus porta ac. Curabitur vestibulum semper nunc quis bibendum. Morbi lobortis lectus vel dui tincidunt facilisis. Sed ultricies elementum egestas.  Curabitur imperdiet augue risus, ac commodo lacus ullamcorper aliquet. Etiam sed nulla felis. In nibh dui, laoreet et ligula sit amet, commodo laoreet orci. Vivamus molestie ante odio, in congue nisl adipiscing id. Nunc sit amet suscipit felis. Integer aliquet tortor at risus tempor, auctor aliquet sapien mollis posuere.    Etiam turpis felis, elementum sit amet fermentum in, auctor at ligula. Proin pulvinar est et cursus imperdiet. Nunc lacus ante, luctus sed egestas varius, sagittis sit amet est. Curabitur hendrerit ornare iaculis. Proin in faucibus quam. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse fringilla non arcu vitae blandit. Duis id leo et mauris vestibulum sagittis. Integer facilisis porttitor sapien, eget pellentesque dui. Fusce aliquet sapien elit, eu accumsan felis vulputate sit amet. Cras in porta nisl. Integer eu orci vel massa convallis ornare. Etiam id tellus lorem. Fusce in nibh erat.  Curabitur justo mi, ultricies a adipiscing quis, aliquet a mauris. Quisque suscipit erat ligula, ac varius felis rhoncus at. Nam at libero tellus. Aliquam imperdiet justo est, eget fringilla nibh posuere ut. Maecenas eleifend nulla luctus, lacinia odio sed, consectetur erat. Vestibulum scelerisque ut ipsum eget ornare. Aliquam erat volutpat. Sed lobortis nisl non posuere sodales. Curabitur pretium massa nec ligula rhoncus, vel condimentum mauris tristique. Vestibulum semper nisi a ligula venenatis consequat. Sed nec viverra risus.  Fusce a ultricies magna. Vestibulum ut lacinia velit, ut suscipit neque. Vivamus in dictum eros. Sed laoreet cursus lacus placerat pretium. Suspendisse placerat ultrices ante ut vehicula. In ac elit ligula. Proin congue diam ut erat tristique, id sodales sem rhoncus.  Suspendisse aliquet imperdiet mattis. Quisque massa nisl, pulvinar vitae metus at, posuere ultricies lacus. Proin vel nibh non ante gravida rutrum at in turpis. Nam blandit fringilla nunc ullamcorper elementum. Mauris eu eros cursus, varius ipsum vitae, commodo velit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Maecenas ultrices turpis sed risus auctor dapibus. Proin pellentesque lorem a semper placerat. Curabitur tristique metus et mi rhoncus, sit amet ultricies arcu pulvinar. Aenean dolor risus, tempor nec orci quis, iaculis adipiscing nisi. Donec tempor aliquet nulla, pulvinar vulputate metus porta ut. Ut et tortor at metus aliquam rhoncus non vitae justo. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum tristique justo vitae ultricies facilisis.  Nullam arcu lectus, ornare a sem in, fermentum varius metus. Nam ornare venenatis massa eu egestas. Nam et libero eget justo hendrerit posuere. Nulla dictum magna ac egestas placerat. Praesent eu massa sollicitudin, rhoncus nunc sed, vestibulum dui. Mauris id vestibulum risus. Nullam sagittis tellus quis varius ullamcorper. Donec sagittis sed nisl eget consequat. Donec tincidunt mauris non consequat bibendum.  Nunc in est mollis, facilisis tortor luctus, iaculis enim. Vestibulum nec diam dolor. Cras facilisis at metus nec sagittis. Aliquam auctor at odio ut euismod. Nulla sed gravida lacus. Morbi vulputate elementum mauris, aliquam euismod turpis auctor et. Donec faucibus justo in purus faucibus tempus. Quisque nec felis diam. Nullam sollicitudin viverra ornare. Aliquam erat volutpat. Nunc dapibus sapien leo. Maecenas ullamcorper, nibh et cursus convallis, sem neque convallis massa, at euismod magna est nec enim.  Duis erat tortor, facilisis sed tortor vel, vestibulum faucibus lorem. Duis mollis, libero sit amet scelerisque auctor, eros tellus fermentum enim, id sagittis velit mauris dictum dolor. Cras quis erat sit amet sem sollicitudin congue. Vestibulum luctus tempus erat eu vestibulum. Sed sed pellentesque risus, eu condimentum justo. Donec ac arcu ac erat consectetur fringilla et non erat. Donec id justo pulvinar, imperdiet arcu eget, iaculis felis. Sed suscipit metus erat, a pulvinar nulla laoreet non. Ut ut venenatis est, vitae porttitor nisi. Integer non odio porttitor, iaculis lectus nec, dictum tortor.  Nullam nec volutpat tellus. Sed eleifend vestibulum volutpat. Nam nunc lorem, elementum sit amet commodo vitae, sagittis quis justo. Maecenas sed elit mollis, accumsan lorem non, consequat quam. Phasellus neque ligula, sodales ac augue eu, tincidunt congue justo. Phasellus purus tortor, fringilla ac lectus venenatis, egestas lobortis ipsum. Fusce quis lacinia lorem.  Aenean luctus elementum nisl, vel vulputate erat congue quis. In in felis fermentum, tristique ante in, tincidunt odio. Aenean posuere lectus et ultricies sollicitudin. Sed semper adipiscing orci, sit amet egestas lectus hendrerit et. Maecenas sit amet porta dolor. Ut lacinia rhoncus turpis, at volutpat risus accumsan in. Class aptent taciti sociosqu ad litora torquent pum fermentum, ante ipsum egestas ligula, et egestas augue dolor nec ipsum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae;  Suspendisse justo felis, congue ac tellus ac, tristique vehicula lorem. Nam at vulputate diam, vel vestibulum risus. Proin nec consequat eros. Aenean eget nunc at augue hendrerit feugiat a ut ipsum. Aliquam in mi placerat odio ultricies sodales ac eu sem. Etiam nec leo eget eros faucibus dapibus. Pellentesque iaculis luctus tellus, a posuere urna volutpat ut. Vestibulum facilisis metus lorem, eu fermentum mi facilisis vitae. Nulla scelerisque tempor justo, sed egestas sem ornare id. Quisque tincidunt pharetra enim in ultricies. Donec dignissim dapibus nisi, non molestie nibh rhoncus eu. Maecenas eget sodales tortor, sit amet porta libero.  Etiam vel massa eleifend est mollis ultricies sed sit amet ante. Curabitur bibendum tincidunt libero, sed iaculis lacus hendrerit nec. Integer vel rutrum massa, rhoncus dapibus turpis. Phasellus vel dapibus urna. Nulla vitae libero a nulla tincidunt porta vel sed velit. Suspendisse vitae nunc lectus. Nulla facilisi. Fusce ac justo ac tortor varius facilisis. Fusce nec dolor suscipit, rutrum arcu vitae, luctus sem. In et elit rutrum, varius purus vel, ultrices quam. Maecenas scelerisque sed n Proin pretium tellus ac sagittis molestie. Donec pulvinar sit amet turpis eget interdum. Etiam consequat elementum odio, rhoncus tincidunt lacus auctor quis.  Curabitur interdum tortor vehicula eros molestie malesuada. Suspendisse blandit purus mi, id vehicula nunc ornare et. Phasellus est sem, fringilla eu laoreet malesuada, facilisis eget lorem. Phasellus sed mattis metus. Nullam laoreet sit amet elit a ultricies. In hac habitasse platea dictumst. Mauris leo nibh, luctus in felis at, accumsan venenatis urna. Quisque lorem purus, ultrices quis adipiscing ac, laoreet non purus. Curabitur eget fringilla libero. Vestibulum ac volutpat magna. Maecenas dignissim facilisis risus eu lacinia. Vivamus vel lacus vel tellus rutrum ullamcorper. Curabitur quis sapien imperdiet enim eleifend condimentum. Quisque laoreet elit massa, eu fermentum sem pulvinar sit amet. Etiam hendrerit facilisis bibendum.  Donec elementum accumsan magna quis dignissim. Phasellus in dignissim quam. Nam consectetur at justo ac semper. Mauris velit orci, gravida vel massa ut, condimentum aliquam massa. Duis ut leo quis sem eleifend adipiscing. Donec tempor mollis leo, a cursus urna tempor non. Sed pretium urna vel elit rutrum imperdiet. Phasellus vitae mauris massa. Proin eget fermentum orci. Phasellus faucibus dictum elit sed cursus. Nulla hendrerit viverra nisl, sed condimentum enim blandit eretra. Quisque ut arcu rutrum, blandit tortor a, imperdiet risus. Nulla facilisi. Pellentesque tincidunt scelerisque felis in venenatis. Aliquam tortor libero, sodales eget eleifend non, interdum id mi. Pellentesque porta id libero sit amet accumsan. Suspendisse id magna mollis, eleifend massa id, blandit augue. Phasellus risus magna, facilisis in porta pretium, suscipit in mi. Fusce eget sapien ac mauris commodo rutrum sit amet sit amet dui. Pellentesque in pulvinar ante. Donec volutpat nec lectus eu tincidunt.  Vivamus lobortis eget augue sed dapibus. Etiam ut urna quis arcu auctor euismod. Sed eleifend pulvinar tellus eu lobortis. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Vestibulum dolor nulla, placerat in ante quis, auctor ultricies neque. Praesent accumsan felis at ante rhoncus vulputate. Nunc elementum elementum sem, eu cursus massa dictum vitae. Sed dignissim lobortis augue ac dignissim. Nulla facilisi.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC2: OK - Writes in log" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris00000042Montpellier: OK&#xd;
Toto: fort&#xd;
Titi: petit&#xd;
00000006Napoli</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">The module compare the default value(COMPARE) with the body sent in the request -&gt; there are always differences</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Duplication-Type</stringProp>
                    <stringProp name="Header.value">Response</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">&quot;Duplication-Type: Response&quot; in the header</stringProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body size" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="561439895">Content-Length: 7</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body value" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1668466885">COMPARE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC3: OK - Truncate" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${trunc}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">truncate the log</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1737229797">The log has been truncated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC4: OK - Comparison enabled" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris00000142Accept-Ranges: bytes&#xd;
Content-Length: 4&#xd;
ETag: &quot;40600a-4-4f1bb5f6d0040&quot;&#xd;
Last-Modified: Thu, 06 Feb 2014 11:42:49 GMT&#xd;
UNIQUE_ID: 7855441177&#xd;
00000004BODY</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${test1}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">The module compares the response value finded in the file comp_test1 with the body sent in the request</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Duplication-Type</stringProp>
                    <stringProp name="Header.value">Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">UNIQUE_ID</stringProp>
                    <stringProp name="Header.value">1587963206</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">&quot;Duplication-Type: Response&quot; in the header</stringProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2044322">BODY</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC5: OK - get the log file" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${getlog}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">get the log file to check if the differents responses have been written</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check log content" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1145573375">7855441177</stringProp>
                  <stringProp name="-280539355">1587963206</stringProp>
                  <stringProp name="1632741285">BEGIN NEW REQUEST DIFFERENCE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <stringProp name="TestPlan.comments">check if in the log have been written the UNIQUE_ID of the two responses</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC3: OK - Truncate" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${trunc}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">truncate the log</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1737229797">The log has been truncated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC4: OK - Comparison enabled - Elapsed Time By Comp" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris00000142Accept-Ranges: bytes&#xd;
Content-Length: 4&#xd;
ETag: &quot;40600a-4-4f1bb5f6d0040&quot;&#xd;
Last-Modified: Thu, 06 Feb 2014 11:42:49 GMT&#xd;
UNIQUE_ID: 7855441177&#xd;
00000004BODY</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${delayed_response}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">The module compares the response value finded in the file comp_test1 with the body sent in the request</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Duplication-Type</stringProp>
                    <stringProp name="Header.value">Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">UNIQUE_ID</stringProp>
                    <stringProp name="Header.value">1587963206</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">ELAPSED_TIME_BY_DUP</stringProp>
                    <stringProp name="Header.value">123</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">&quot;Duplication-Type: Response&quot; in the header</stringProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="50515874">delayed response received</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC5: OK - get the log file" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${getlog}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">get the log file to check if the differents responses have been written</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check log content" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1145573375">7855441177</stringProp>
                  <stringProp name="-280539355">1587963206</stringProp>
                  <stringProp name="1632741285">BEGIN NEW REQUEST DIFFERENCE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <stringProp name="TestPlan.comments">check if in the log have been written the UNIQUE_ID of the two responses</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1075307745">Elapsed time for requests \(ms\): DUP 123 COMP 1[0-1][0-9][0-9] DIFF -[0-9]{3}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC3: OK - Truncate" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${trunc}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">truncate the log</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1737229797">The log has been truncated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC4: OK - Comparison disabled" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris00000142Accept-Ranges: bytes&#xd;
Content-Length: 4&#xd;
ETag: &quot;40600a-4-4f1bb5f6d0040&quot;&#xd;
Last-Modified: Thu, 06 Feb 2014 11:42:49 GMT&#xd;
UNIQUE_ID: 7855441177&#xd;
00000004BODY</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${test2}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">The module does not compare the responses and write them in the log</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Duplication-Type</stringProp>
                    <stringProp name="Header.value">Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">UNIQUE_ID</stringProp>
                    <stringProp name="Header.value">1587963206</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">&quot;Duplication-Type: Response&quot; in the header</stringProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="63374032">BODY2</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC5: OK - get the log file" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${getlog}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">get the log file to check if the differents responses have been written</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check log content" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1712046486">UNIQUE_ID 11 7855441177</stringProp>
                  <stringProp name="-976095185">UNIQUE_ID 10 1587963206</stringProp>
                  <stringProp name="211792786">serialization::archive</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <stringProp name="TestPlan.comments">check if in the log have been written the UNIQUE_ID of the two responses</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC6: OK - Truncate" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${trunc}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">truncate the log</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1737229797">The log has been truncated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC7: OK - LargeData in Request" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0000000000000109UNIQUE_ID: COMP12345678${__unescape(\n)}Content-Length: 411${__unescape(\n)}Content-Type: text/xml; charset=UTF-8${__unescape(\n)}Transfer-Encoding: chunked${__unescape(\n)}00032298&lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;${__unescape(\n)}&lt;getPNSReturn&gt;${__unescape(\n)}&lt;Process&gt;&lt;Status&gt;OK&lt;/Status&gt;${__unescape(\n)}&lt;/Process&gt;${__unescape(\n)}&lt;Data&gt;&lt;PreferencesData&gt;&lt;Extension&gt;&lt;OOPSApplications&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.&lt;/OOPSApplications&gt;&lt;/Extension&gt;&lt;/PreferencesData&gt;&lt;NextECareData&gt;&lt;MobileBillList&gt;&lt;Bill&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris et volutpat sapien. Nullam dictum auctor mauris ut laoreet. Vestibulum vulputate dictum quam, et imperdiet metus mattis eu. Donec volutpat malesuada bibendum. Donec in lectus sit amet dui sagittis euismod ultrices quis nulla. Fusce ultricies malesuada adipiscing. Morbi imperdiet elit vitae mi convallis, nec ullamcorper dui semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.Aenean convallis vehicula vestibulum. Donec eu neque ligula. Duis posuere a nisi eu semper. Proin urna elit, consequat eu felis in, porttitor lobortis velit. Nullam ac tristique tellus, at eleifend odio. Curabitur at purus tempor, hendrerit quam eget, tempus erat. Sed metus dui, vehicula quis leo nec, facilisis vestibulum nisi. Praesent tincidunt enim quis massa sagittis, ut tempus mi varius. Etiam at orci nec quam aliquet venenatis a nec dolor. Fusce nibh purus, dapibus ac lectus sed, tempus tempus nunc. Curabitur aliquet, massa faucibus ultricies consequat, purus urna pretium est, suscipit ultrices felis mi vel libero. Etiam vehicula odio vel erat consequat, a ullamcorper purus gravida. Nullam nec tincidunt justo, in semper magna. Pellentesque enim lorem, pharetra ut congue id, consequat quis tortor.Phasellus imperdiet purus eget consectetur pulvinar. Cras molestie turpis mauris, id molestie quam tempus et. Fusce sed nulla vehicula, semper ipsum vitae, volutpat tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam ornare hendrerit tortor, sit amet volutpat ligula dignissim sed. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae, Pellentesque ultrices turpis dui, ac rhoncus nunc tincidunt placerat. Proin id facilisis leo, a ullamcorper dui. Sed a velit sem. In id diam rutrum, ullamcorper enim sit amet, molestie nibh. Pellentesque dignissim ipsum sed enim aliquet, tristique vehicula lectus tempus. Morbi id euismod erat, quis eleifend sed.&lt;/Bill&gt;&lt;/MobileBillList&gt;&lt;/NextECareData&gt;&lt;/Data&gt;&lt;/getPNSReturn&gt;${__unescape(\n)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${comp}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">mod_comapre receive a requeste containing a big body to comapre</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Duplication-Type</stringProp>
                    <stringProp name="Header.value">Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">UNIQUE_ID</stringProp>
                    <stringProp name="Header.value">1587963206</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">&quot;Duplication-Type: Response&quot; in the header</stringProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check Default Value" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1668466885">COMPARE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC8: OK - get the log file" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${getlog}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">get the log file to check if the differents responses have been written</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check log content" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1390773182">Key with value differences :
&apos;Content-Length&apos; ==&gt; &apos;411&apos;/&apos;7&apos;
&apos;UNIQUE_ID&apos; ==&gt; &apos;COMP12345678&apos;/&apos;1587963206&apos;</stringProp>
                  <stringProp name="1868915195">Key missing in the destination map :
&apos;Content-Type&apos; ==&gt; &apos;text/xml; charset=UTF-8&apos;
&apos;Transfer-Encoding&apos; ==&gt; &apos;chunked&apos;</stringProp>
                  <stringProp name="517813910">\+COMPARE</stringProp>
                  <stringProp name="2016365415">-&lt;OOPSApplications&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris e</stringProp>
                  <stringProp name="-1560696395">Key missing in src map :
&apos;Accept-Ranges&apos; ==&gt; &apos;bytes&apos;
&apos;Connection&apos; ==&gt; &apos;Keep-Alive&apos;</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <stringProp name="TestPlan.comments">check if in the log have been written the UNIQUE_ID of the two responses</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC3: OK - Truncate" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${trunc}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">truncate the log</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1737229797">The log has been truncated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC4: OK - Comparison enabled  HTTP Status Code Diff" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris00000142Accept-Ranges: bytes&#xd;
Content-Length: 4&#xd;
ETag: &quot;40600a-4-4f1bb5f6d0040&quot;&#xd;
Last-Modified: Thu, 06 Feb 2014 11:42:49 GMT&#xd;
UNIQUE_ID: 7855441177&#xd;
00000004BODY</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${delayed_response}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">The module compares the response value finded in the file comp_test1 with the body sent in the request</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Duplication-Type</stringProp>
                    <stringProp name="Header.value">Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">UNIQUE_ID</stringProp>
                    <stringProp name="Header.value">1587963206</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X_DUP_HTTP_STATUS</stringProp>
                    <stringProp name="Header.value">204</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">&quot;Duplication-Type: Response&quot; in the header</stringProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC5: OK - get the log file" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${getlog}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">get the log file to check if the differents responses have been written</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check log content" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1145573375">7855441177</stringProp>
                  <stringProp name="-280539355">1587963206</stringProp>
                  <stringProp name="1632741285">BEGIN NEW REQUEST DIFFERENCE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <stringProp name="TestPlan.comments">check if in the log have been written the UNIQUE_ID of the two responses</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1925781758">Http Status Codes: DUP 204 COMP 200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC3: OK - Truncate" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${trunc}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">truncate the log</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1737229797">The log has been truncated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC4: OK - Comparison enabled  HEADERS AND METHOD CHECK" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">00000005Paris00000142Accept-Ranges: bytes&#xd;
Content-Length: 4&#xd;
ETag: &quot;40600a-4-4f1bb5f6d0040&quot;&#xd;
Last-Modified: Thu, 06 Feb 2014 11:42:49 GMT&#xd;
UNIQUE_ID: 7855441177&#xd;
00000004BODY</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${method_headers}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">The module compares the response value finded in the file comp_test1 with the body sent in the request</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Duplication-Type</stringProp>
                    <stringProp name="Header.value">Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">UNIQUE_ID</stringProp>
                    <stringProp name="Header.value">1587963206</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X_DUP_HTTP_STATUS</stringProp>
                    <stringProp name="Header.value">456</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X_DUP_METHOD</stringProp>
                    <stringProp name="Header.value">PATCH</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">&quot;Duplication-Type: Response&quot; in the header</stringProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC5: OK - get the log file" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${getlog}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">get the log file to check if the differents responses have been written</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <intProp name="Assertion.test_type">8</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check log content" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1145573375">7855441177</stringProp>
                  <stringProp name="-280539355">1587963206</stringProp>
                  <stringProp name="1632741285">BEGIN NEW REQUEST DIFFERENCE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <stringProp name="TestPlan.comments">check if in the log have been written the UNIQUE_ID of the two responses</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1925781758">Http Status Codes: DUP 204 COMP 200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
